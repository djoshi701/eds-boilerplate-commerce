{"version":3,"file":"index.min.js","sources":["../../../common/temp/node_modules/.pnpm/tslib@2.3.1/node_modules/tslib/tslib.es6.js","../src/payload.ts","../src/base64.ts","../src/contexts.ts","../src/core.ts","../src/logger.ts","../../../common/temp/node_modules/.pnpm/uuid@3.4.0/node_modules/uuid/lib/rng-browser.js","../../../common/temp/node_modules/.pnpm/uuid@3.4.0/node_modules/uuid/lib/bytesToUuid.js","../../../common/temp/node_modules/.pnpm/uuid@3.4.0/node_modules/uuid/v1.js","../../../common/temp/node_modules/.pnpm/uuid@3.4.0/node_modules/uuid/v4.js","../../../common/temp/node_modules/.pnpm/uuid@3.4.0/node_modules/uuid/index.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*\n * Copyright (c) 2022 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { base64urlencode, base64urldecode } from './base64';\nimport type { SelfDescribingJson, SelfDescribingJsonArray } from './core';\n\n/**\n * Type for a Payload dictionary\n */\nexport type Payload = Record<string, unknown>;\n\n/**\n * A tuple which represents the unprocessed JSON to be added to the Payload\n */\nexport type EventJsonWithKeys = { keyIfEncoded: string; keyIfNotEncoded: string; json: Record<string, unknown> };\n\n/**\n * An array of tuples which represents the unprocessed JSON to be added to the Payload\n */\nexport type EventJson = Array<EventJsonWithKeys>;\n\n/**\n * A function which will processor the Json onto the injected PayloadBuilder\n */\nexport type JsonProcessor = (\n  payloadBuilder: PayloadBuilder,\n  jsonForProcessing: EventJson,\n  contextEntitiesForProcessing: SelfDescribingJson[]\n) => void;\n\n/**\n * Interface for mutable object encapsulating tracker payload\n */\nexport interface PayloadBuilder {\n  /**\n   * Adds an entry to the Payload\n   * @param key - Key for Payload dictionary entry\n   * @param value - Value for Payload dictionaty entry\n   */\n  add: (key: string, value: unknown) => void;\n\n  /**\n   * Merges a payload into the existing payload\n   * @param dict - The payload to merge\n   */\n  addDict: (dict: Payload) => void;\n\n  /**\n   * Caches a JSON object to be added to payload on build\n   * @param keyIfEncoded - key if base64 encoding is enabled\n   * @param keyIfNotEncoded - key if base64 encoding is disabled\n   * @param json - The json to be stringified and added to the payload\n   */\n  addJson: (keyIfEncoded: string, keyIfNotEncoded: string, json: Record<string, unknown>) => void;\n\n  /**\n   * Caches a context entity to be added to payload on build\n   * @param entity - Context entity to add to the event\n   */\n  addContextEntity: (entity: SelfDescribingJson) => void;\n\n  /**\n   * Gets the current payload, before cached JSON is processed\n   */\n  getPayload: () => Payload;\n\n  /**\n   * Gets all JSON objects added to payload\n   */\n  getJson: () => EventJson;\n\n  /**\n   * Adds a function which will be executed when building\n   * the payload to process the JSON which has been added to this payload\n   * @param jsonProcessor - The JsonProcessor function for this builder\n   */\n  withJsonProcessor: (jsonProcessor: JsonProcessor) => void;\n\n  /**\n   * Builds and returns the Payload\n   * @param base64Encode - configures if unprocessed, cached json should be encoded\n   */\n  build: () => Payload;\n}\n\nexport function payloadBuilder(): PayloadBuilder {\n  const dict: Payload = {},\n    allJson: EventJson = [],\n    jsonForProcessing: EventJson = [],\n    contextEntitiesForProcessing: SelfDescribingJson[] = [];\n  let processor: JsonProcessor | undefined;\n\n  const add = (key: string, value: unknown): void => {\n    if (value != null && value !== '') {\n      // null also checks undefined\n      dict[key] = value;\n    }\n  };\n\n  const addDict = (dict: Payload): void => {\n    for (const key in dict) {\n      if (Object.prototype.hasOwnProperty.call(dict, key)) {\n        add(key, dict[key]);\n      }\n    }\n  };\n\n  const addJson = (keyIfEncoded: string, keyIfNotEncoded: string, json?: Record<string, unknown>): void => {\n    if (json && isNonEmptyJson(json)) {\n      const jsonWithKeys = { keyIfEncoded, keyIfNotEncoded, json };\n      jsonForProcessing.push(jsonWithKeys);\n      allJson.push(jsonWithKeys);\n    }\n  };\n\n  const addContextEntity = (entity: SelfDescribingJson): void => {\n    contextEntitiesForProcessing.push(entity);\n  };\n\n  return {\n    add,\n    addDict,\n    addJson,\n    addContextEntity,\n    getPayload: () => dict,\n    getJson: () => allJson,\n    withJsonProcessor: (jsonProcessor) => {\n      processor = jsonProcessor;\n    },\n    build: function () {\n      processor?.(this, jsonForProcessing, contextEntitiesForProcessing);\n      return dict;\n    },\n  };\n}\n\n/**\n * A helper to build a Snowplow request from a set of name-value pairs, provided using the add methods.\n * Will base64 encode JSON, if desired, on build\n *\n * @returns The request builder, with add and build methods\n */\nexport function payloadJsonProcessor(encodeBase64: boolean): JsonProcessor {\n  return (\n    payloadBuilder: PayloadBuilder,\n    jsonForProcessing: EventJson,\n    contextEntitiesForProcessing: SelfDescribingJson[]\n  ) => {\n    const add = (json: any, keyIfEncoded: string, keyIfNotEncoded: string): void => {\n      const str = JSON.stringify(json);\n      if (encodeBase64) {\n        payloadBuilder.add(keyIfEncoded, base64urlencode(str));\n      } else {\n        payloadBuilder.add(keyIfNotEncoded, str);\n      }\n    };\n\n    const getContextFromPayload = () => {\n      let payload = payloadBuilder.getPayload();\n      if (encodeBase64 ? payload.cx : payload.co) {\n        return JSON.parse(\n          encodeBase64 ? base64urldecode(payload.cx as string) : (payload.co as string)\n        ) as SelfDescribingJsonArray;\n      }\n      return undefined;\n    };\n\n    const combineContexts = (\n      originalContext: SelfDescribingJsonArray | undefined,\n      newContext: SelfDescribingJsonArray\n    ) => {\n      let context = originalContext || getContextFromPayload();\n      if (context) {\n        context.data = context.data.concat(newContext.data);\n      } else {\n        context = newContext;\n      }\n      return context;\n    };\n\n    let context: SelfDescribingJsonArray | undefined = undefined;\n    for (const json of jsonForProcessing) {\n      if (json.keyIfEncoded === 'cx') {\n        context = combineContexts(context, json.json as SelfDescribingJsonArray);\n      } else {\n        add(json.json, json.keyIfEncoded, json.keyIfNotEncoded);\n      }\n    }\n    jsonForProcessing.length = 0;\n\n    if (contextEntitiesForProcessing.length) {\n      let newContext = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0',\n        data: [...contextEntitiesForProcessing],\n      };\n      context = combineContexts(context, newContext);\n      contextEntitiesForProcessing.length = 0;\n    }\n\n    if (context) {\n      add(context, 'cx', 'co');\n    }\n  };\n}\n\n/**\n * Is property a non-empty JSON?\n * @param property - Checks if object is non-empty json\n */\nexport function isNonEmptyJson(property?: Record<string, unknown>): boolean {\n  if (!isJson(property)) {\n    return false;\n  }\n  for (const key in property) {\n    if (Object.prototype.hasOwnProperty.call(property, key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Is property a JSON?\n * @param property - Checks if object is json\n */\nexport function isJson(property?: Record<string, unknown>): boolean {\n  return (\n    typeof property !== 'undefined' &&\n    property !== null &&\n    (property.constructor === {}.constructor || property.constructor === [].constructor)\n  );\n}\n","/*\n * Copyright (c) 2013 Kevin van Zonneveld (http://kvz.io)\n * and Contributors (http://phpjs.org/authors)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// Deprecated and removed in TypeScript\ndeclare function unescape(s: string): string;\n\n/**\n * Decodes a url safe Base 64 encoded string\n * @remarks See: {@link http://tools.ietf.org/html/rfc4648#page-7}\n * @param data - String to decode\n * @returns The decoded string\n */\nexport function base64urldecode(data: string): string {\n  if (!data) {\n    return data;\n  }\n  const padding = 4 - (data.length % 4);\n  switch (padding) {\n    case 2:\n      data += '==';\n      break;\n    case 3:\n      data += '=';\n      break;\n  }\n  const b64Data = data.replace(/-/g, '+').replace(/_/g, '/');\n  return base64decode(b64Data);\n}\n\n/**\n * Encodes a string into a url safe Base 64 encoded string\n * @remarks See: {@link http://tools.ietf.org/html/rfc4648#page-7}\n * @param data - String to encode\n * @returns The url safe Base 64 string\n */\nexport function base64urlencode(data: string): string {\n  if (!data) {\n    return data;\n  }\n\n  const enc = base64encode(data);\n  return enc.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nconst b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/**\n * Encode string as base64.\n * Any type can be passed, but will be stringified\n *\n * @param data - string to encode\n * @returns base64-encoded string\n */\nexport function base64encode(data: string): string {\n  // discuss at: http://phpjs.org/functions/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Rafał Kukawski (http://kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  // example 1: base64_encode('Kevin van Zonneveld');\n  // returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  // example 2: base64_encode('a');\n  // returns 2: 'YQ=='\n  // example 3: base64_encode('✓ à la mode');\n  // returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0;\n  const tmp_arr: Array<string> = [];\n\n  if (!data) {\n    return data;\n  }\n\n  data = unescape(encodeURIComponent(data));\n\n  do {\n    // pack three octets into four hexets\n    o1 = data.charCodeAt(i++);\n    o2 = data.charCodeAt(i++);\n    o3 = data.charCodeAt(i++);\n\n    bits = (o1 << 16) | (o2 << 8) | o3;\n\n    h1 = (bits >> 18) & 0x3f;\n    h2 = (bits >> 12) & 0x3f;\n    h3 = (bits >> 6) & 0x3f;\n    h4 = bits & 0x3f;\n\n    // use hexets to index into b64, and append result to encoded string\n    tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n  } while (i < data.length);\n\n  const enc = tmp_arr.join('');\n\n  const r = data.length % 3;\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n}\n\n/**\n * Decode base64 to string\n *\n * @param data - base64 to string\n * @returns decoded string\n */\nexport function base64decode(encodedData: string): string {\n  //  discuss at: http://locutus.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Indigo744\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  // decodeUTF8string()\n  // Internal function to decode properly UTF8 string\n  // Adapted from Solution #1 at https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n  const decodeUTF8string = function (str: string) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(\n      str\n        .split('')\n        .map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  };\n\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0,\n    dec = '';\n  const tmpArr: Array<string> = [];\n\n  if (!encodedData) {\n    return encodedData;\n  }\n\n  encodedData += '';\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++));\n    h2 = b64.indexOf(encodedData.charAt(i++));\n    h3 = b64.indexOf(encodedData.charAt(i++));\n    h4 = b64.indexOf(encodedData.charAt(i++));\n\n    bits = (h1 << 18) | (h2 << 12) | (h3 << 6) | h4;\n\n    o1 = (bits >> 16) & 0xff;\n    o2 = (bits >> 8) & 0xff;\n    o3 = bits & 0xff;\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1);\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2);\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3);\n    }\n  } while (i < encodedData.length);\n\n  dec = tmpArr.join('');\n\n  return decodeUTF8string(dec.replace(/\\0+$/, ''));\n}\n","/*\n * Copyright (c) 2022 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { PayloadBuilder, Payload, isNonEmptyJson } from './payload';\nimport { SelfDescribingJson } from './core';\nimport { CorePlugin } from './plugins';\nimport { LOG } from './logger';\n\n/**\n * Argument for {@link ContextGenerator} and {@link ContextFilter} callback\n */\nexport interface ContextEvent {\n  /** The event payload */\n  event: Payload;\n  /** The event type\n   * @example 'page_view'\n   */\n  eventType: string;\n  /** The event schema where one is available, or empty string\n   * @example 'iglu:com.snowplowanalytics.snowplow/ad_impression/jsonschema/1-0-0'\n   */\n  eventSchema: string;\n}\n\n/**\n * A context generator is a user-supplied callback that is evaluated for each event\n * to allow an additional context to be dynamically attached to the event\n * @param args - - Object which contains the event information to help decide what should be included in the returned Context\n */\nexport type ContextGenerator = (args?: ContextEvent) => SelfDescribingJson | SelfDescribingJson[] | undefined;\n\n/**\n * A context filter is a user-supplied callback that is evaluated for each event\n * to determine if the context associated with the filter should be attached to the event\n * @param args - - Object that contains: event, eventType, eventSchema\n */\nexport type ContextFilter = (args?: ContextEvent) => boolean;\n\n/**\n * A context primitive is either a self-describing JSON or a context generator\n */\nexport type ContextPrimitive = SelfDescribingJson | ContextGenerator;\n\n/**\n * A filter provider is a tuple that has two parts: a context filter and the context primitive(s)\n * If the context filter evaluates to true, the tracker will attach the context primitive(s)\n */\nexport type FilterProvider = [ContextFilter, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * A ruleset has accept or reject properties that contain rules for matching Iglu schema URIs\n */\nexport interface RuleSet {\n  accept?: Array<string> | string;\n  reject?: Array<string> | string;\n}\n\n/**\n * A ruleset provider is aa tuple that has two parts: a ruleset and the context primitive(s)\n * If the ruleset allows the current event schema URI, the tracker will attach the context primitive(s)\n */\nexport type RuleSetProvider = [RuleSet, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * Conditional context providers are two element arrays used to decide when to attach contexts, where:\n * - the first element is some conditional criterion\n * - the second element is any number of context primitives\n */\nexport type ConditionalContextProvider = FilterProvider | RuleSetProvider;\n\n/**\n * A Dynamic context is an array of Self Describing JSON contexts, or an array of callbacks which return Self Describing JSON contexts\n * The array can be a mix of both contexts and callbacks which generate contexts\n */\nexport type DynamicContext = Array<SelfDescribingJson | ((...params: any[]) => SelfDescribingJson | null)>;\n\nexport interface GlobalContexts {\n  /**\n   * Returns all Context Primitives\n   */\n  getGlobalPrimitives(): Array<ContextPrimitive>;\n\n  /**\n   * Returns all Conditional Contexts\n   */\n  getConditionalProviders(): Array<ConditionalContextProvider>;\n\n  /**\n   * Adds conditional or primitive global contexts\n   * @param contexts - An Array of either Conditional Contexts or Primitive Contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts - An Array of either Condition Contexts or Primitive Contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event - The event to check for applicable global contexts for\n   */\n  getApplicableContexts(event: PayloadBuilder): Array<SelfDescribingJson>;\n}\n\n/**\n * Contains helper functions to aid in the addition and removal of Global Contexts\n */\nexport function globalContexts(): GlobalContexts {\n  let globalPrimitives: Array<ContextPrimitive> = [];\n  let conditionalProviders: Array<ConditionalContextProvider> = [];\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event - The event to check for applicable global contexts for\n   * @returns An array of contexts\n   */\n  const assembleAllContexts = (event: PayloadBuilder): Array<SelfDescribingJson> => {\n    const eventSchema = getUsefulSchema(event);\n    const eventType = getEventType(event);\n    const contexts: Array<SelfDescribingJson> = [];\n    const generatedPrimitives = generatePrimitives(globalPrimitives, event, eventType, eventSchema);\n    contexts.push(...generatedPrimitives);\n\n    const generatedConditionals = generateConditionals(conditionalProviders, event, eventType, eventSchema);\n    contexts.push(...generatedConditionals);\n\n    return contexts;\n  };\n\n  return {\n    getGlobalPrimitives(): Array<ContextPrimitive> {\n      return globalPrimitives;\n    },\n\n    getConditionalProviders(): Array<ConditionalContextProvider> {\n      return conditionalProviders;\n    },\n\n    addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      const acceptedConditionalContexts: ConditionalContextProvider[] = [];\n      const acceptedContextPrimitives: ContextPrimitive[] = [];\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          acceptedConditionalContexts.push(context);\n        } else if (isContextPrimitive(context)) {\n          acceptedContextPrimitives.push(context);\n        }\n      }\n      globalPrimitives = globalPrimitives.concat(acceptedContextPrimitives);\n      conditionalProviders = conditionalProviders.concat(acceptedConditionalContexts);\n    },\n\n    clearGlobalContexts(): void {\n      conditionalProviders = [];\n      globalPrimitives = [];\n    },\n\n    removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          conditionalProviders = conditionalProviders.filter(\n            (item) => JSON.stringify(item) !== JSON.stringify(context)\n          );\n        } else if (isContextPrimitive(context)) {\n          globalPrimitives = globalPrimitives.filter((item) => JSON.stringify(item) !== JSON.stringify(context));\n        }\n      }\n    },\n\n    getApplicableContexts(event: PayloadBuilder): Array<SelfDescribingJson> {\n      return assembleAllContexts(event);\n    },\n  };\n}\n\nexport interface PluginContexts {\n  /**\n   * Returns list of contexts from all active plugins\n   */\n  addPluginContexts: (additionalContexts?: SelfDescribingJson[] | null) => SelfDescribingJson[];\n}\n\nexport function pluginContexts(plugins: Array<CorePlugin>): PluginContexts {\n  /**\n   * Add common contexts to every event\n   *\n   * @param array - additionalContexts List of user-defined contexts\n   * @returns userContexts combined with commonContexts\n   */\n  return {\n    addPluginContexts: (additionalContexts?: SelfDescribingJson[] | null): SelfDescribingJson[] => {\n      const combinedContexts: SelfDescribingJson[] = additionalContexts ? [...additionalContexts] : [];\n\n      plugins.forEach((plugin) => {\n        try {\n          if (plugin.contexts) {\n            combinedContexts.push(...plugin.contexts());\n          }\n        } catch (ex) {\n          LOG.error('Error adding plugin contexts', ex);\n        }\n      });\n\n      return combinedContexts;\n    },\n  };\n}\n\n/**\n * Find dynamic context generating functions and return their results to be merged into the static contexts\n * Combine an array of unchanging contexts with the result of a context-creating function\n *\n * @param dynamicOrStaticContexts - Array of custom context Objects or custom context generating functions\n * @param Parameters - to pass to dynamic context callbacks\n * @returns An array of Self Describing JSON context\n */\nexport function resolveDynamicContext(\n  dynamicOrStaticContexts?: DynamicContext | null,\n  ...extraParams: any[]\n): Array<SelfDescribingJson> {\n  return (\n    (dynamicOrStaticContexts\n      ?.map(function (context) {\n        if (typeof context === 'function') {\n          try {\n            return context(...extraParams);\n          } catch (e) {\n            //TODO: provide warning\n            return undefined;\n          }\n        } else {\n          return context;\n        }\n      })\n      .filter(Boolean) as Array<SelfDescribingJson>) ?? []\n  );\n}\n\n/**\n * Slices a schema into its composite parts. Useful for ruleset filtering.\n * @param input - A schema string\n * @returns The vendor, schema name, major, minor and patch information of a schema string\n */\nexport function getSchemaParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/jsonschema/([1-9][0-9]*)-(0|[1-9][0-9]*)-(0|[1-9][0-9]*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Validates the vendor section of a schema string contains allowed wildcard values\n * @param parts - Array of parts from a schema string\n * @returns Whether the vendor validation parts are a valid combination\n */\nexport function validateVendorParts(parts: Array<string>): boolean {\n  if (parts[0] === '*' || parts[1] === '*') {\n    return false; // no wildcard in first or second part\n  }\n  if (parts.slice(2).length > 0) {\n    let asterisk = false;\n    for (const part of parts.slice(2)) {\n      if (part === '*')\n        // mark when we've found a wildcard\n        asterisk = true;\n      else if (asterisk)\n        // invalid if alpha parts come after wildcard\n        return false;\n    }\n    return true;\n  } else if (parts.length == 2) return true;\n\n  return false;\n}\n\n/**\n * Validates the vendor part of a schema string is valid for a rule set\n * @param input - Vendor part of a schema string\n * @returns Whether the vendor validation string is valid\n */\nexport function validateVendor(input: string): boolean {\n  const parts = input.split('.');\n  if (parts && parts.length > 1) return validateVendorParts(parts);\n  return false;\n}\n\n/**\n * Checks for validity of input and returns all the sections of a schema string that are used to match rules in a ruleset\n * @param input - A Schema string\n * @returns The sections of a schema string that are used to match rules in a ruleset\n */\nexport function getRuleParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:((?:(?:[a-zA-Z0-9-_]+|\\\\*).)+(?:[a-zA-Z0-9-_]+|\\\\*))/([a-zA-Z0-9-_.]+|\\\\*)/jsonschema/([1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null && validateVendor(matches[1])) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Ensures the rules specified in a schema string of a ruleset are valid\n * @param input - A Schema string\n * @returns if there rule is valid\n */\nexport function isValidRule(input: string): boolean {\n  const ruleParts = getRuleParts(input);\n  if (ruleParts) {\n    const vendor = ruleParts[0];\n    return ruleParts.length === 5 && validateVendor(vendor);\n  }\n  return false;\n}\n\n/**\n * Check if a variable is an Array containing only strings\n * @param input - The variable to validate\n * @returns True if the input is an array containing only strings\n */\nexport function isStringArray(input: unknown): input is Array<string> {\n  return (\n    Array.isArray(input) &&\n    input.every((x) => {\n      return typeof x === 'string';\n    })\n  );\n}\n\n/**\n * Validates whether a rule set is an array of valid ruleset strings\n * @param input - The Array of rule set arguments\n * @returns True is the input is an array of valid rules\n */\nexport function isValidRuleSetArg(input: unknown): boolean {\n  if (isStringArray(input))\n    return input.every((x: string) => {\n      return isValidRule(x);\n    });\n  else if (typeof input === 'string') return isValidRule(input);\n  return false;\n}\n\n/**\n * Check if a variable is a valid, non-empty Self Describing JSON\n * @param input - The variable to validate\n * @returns True if a valid Self Describing JSON\n */\nexport function isSelfDescribingJson(input: unknown): input is SelfDescribingJson {\n  const sdj = input as SelfDescribingJson;\n  if (isNonEmptyJson(sdj))\n    if ('schema' in sdj && 'data' in sdj) return typeof sdj.schema === 'string' && typeof sdj.data === 'object';\n  return false;\n}\n\n/**\n * Validates if the input object contains the expected properties of a ruleset\n * @param input - The object containing a rule set\n * @returns True if a valid rule set\n */\nexport function isRuleSet(input: unknown): input is Record<string, unknown> {\n  const ruleSet = input as Record<string, unknown>;\n  let ruleCount = 0;\n  if (input != null && typeof input === 'object' && !Array.isArray(input)) {\n    if (Object.prototype.hasOwnProperty.call(ruleSet, 'accept')) {\n      if (isValidRuleSetArg(ruleSet['accept'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    if (Object.prototype.hasOwnProperty.call(ruleSet, 'reject')) {\n      if (isValidRuleSetArg(ruleSet['reject'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    // if either 'reject' or 'accept' or both exists,\n    // we have a valid ruleset\n    return ruleCount > 0 && ruleCount <= 2;\n  }\n  return false;\n}\n\n/**\n * Validates if the function can be a valid context generator function\n * @param input - The function to be validated\n */\nexport function isContextCallbackFunction(input: unknown): boolean {\n  return typeof input === 'function' && input.length <= 1;\n}\n\n/**\n * Validates if the function can be a valid context primitive function or self describing json\n * @param input - The function or orbject to be validated\n * @returns True if either a Context Generator or Self Describing JSON\n */\nexport function isContextPrimitive(input: unknown): input is ContextPrimitive {\n  return isContextCallbackFunction(input) || isSelfDescribingJson(input);\n}\n\n/**\n * Validates if an array is a valid shape to be a Filter Provider\n * @param input - The Array of Context filter callbacks\n */\nexport function isFilterProvider(input: unknown): boolean {\n  if (Array.isArray(input)) {\n    if (input.length === 2) {\n      if (Array.isArray(input[1])) {\n        return isContextCallbackFunction(input[0]) && input[1].every(isContextPrimitive);\n      }\n      return isContextCallbackFunction(input[0]) && isContextPrimitive(input[1]);\n    }\n  }\n  return false;\n}\n\n/**\n * Validates if an array is a valid shape to be an array of rule sets\n * @param input - The Array of Rule Sets\n */\nexport function isRuleSetProvider(input: unknown): boolean {\n  if (Array.isArray(input) && input.length === 2) {\n    if (!isRuleSet(input[0])) return false;\n    if (Array.isArray(input[1])) return input[1].every(isContextPrimitive);\n    return isContextPrimitive(input[1]);\n  }\n  return false;\n}\n\n/**\n * Checks if an input array is either a filter provider or a rule set provider\n * @param input - An array of filter providers or rule set providers\n * @returns Whether the array is a valid {@link ConditionalContextProvider}\n */\nexport function isConditionalContextProvider(input: unknown): input is ConditionalContextProvider {\n  return isFilterProvider(input) || isRuleSetProvider(input);\n}\n\n/**\n * Checks if a given schema matches any rules within the provided rule set\n * @param ruleSet - The rule set containing rules to match schema against\n * @param schema - The schema to be matched against the rule set\n */\nexport function matchSchemaAgainstRuleSet(ruleSet: RuleSet, schema: string): boolean {\n  let rejectCount = 0;\n  let acceptCount = 0;\n  const acceptRules = ruleSet['accept'];\n  if (Array.isArray(acceptRules)) {\n    if ((ruleSet.accept as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      acceptCount++;\n    }\n  } else if (typeof acceptRules === 'string') {\n    if (matchSchemaAgainstRule(acceptRules, schema)) {\n      acceptCount++;\n    }\n  }\n\n  const rejectRules = ruleSet['reject'];\n  if (Array.isArray(rejectRules)) {\n    if ((ruleSet.reject as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      rejectCount++;\n    }\n  } else if (typeof rejectRules === 'string') {\n    if (matchSchemaAgainstRule(rejectRules, schema)) {\n      rejectCount++;\n    }\n  }\n\n  if (acceptCount > 0 && rejectCount === 0) {\n    return true;\n  } else if (acceptCount === 0 && rejectCount > 0) {\n    return false;\n  }\n\n  return false;\n}\n\n/**\n * Checks if a given schema matches a specific rule from a rule set\n * @param rule - The rule to match schema against\n * @param schema - The schema to be matched against the rule\n */\nexport function matchSchemaAgainstRule(rule: string, schema: string): boolean {\n  if (!isValidRule(rule)) return false;\n  const ruleParts = getRuleParts(rule);\n  const schemaParts = getSchemaParts(schema);\n  if (ruleParts && schemaParts) {\n    if (!matchVendor(ruleParts[0], schemaParts[0])) return false;\n    for (let i = 1; i < 5; i++) {\n      if (!matchPart(ruleParts[i], schemaParts[i])) return false;\n    }\n    return true; // if it hasn't failed, it passes\n  }\n  return false;\n}\n\nfunction matchVendor(rule: string, vendor: string): boolean {\n  // rule and vendor must have same number of elements\n  const vendorParts = vendor.split('.');\n  const ruleParts = rule.split('.');\n  if (vendorParts && ruleParts) {\n    if (vendorParts.length !== ruleParts.length) return false;\n    for (let i = 0; i < ruleParts.length; i++) {\n      if (!matchPart(vendorParts[i], ruleParts[i])) return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction matchPart(rule: string, schema: string): boolean {\n  // parts should be the string nested between slashes in the URI: /example/\n  return (rule && schema && rule === '*') || rule === schema;\n}\n\n// Returns the \"useful\" schema, i.e. what would someone want to use to identify events.\n// For some events this is the 'e' property but for unstructured events, this is the\n// 'schema' from the 'ue_px' field.\nfunction getUsefulSchema(sb: PayloadBuilder): string {\n  let eventJson = sb.getJson();\n  for (const json of eventJson) {\n    if (json.keyIfEncoded === 'ue_px' && typeof json.json['data'] === 'object') {\n      const schema = (json.json['data'] as Record<string, unknown>)['schema'];\n      if (typeof schema == 'string') {\n        return schema;\n      }\n    }\n  }\n  return '';\n}\n\nfunction getEventType(payloadBuilder: PayloadBuilder): string {\n  const eventType = payloadBuilder.getPayload()['e'];\n  return typeof eventType === 'string' ? eventType : '';\n}\n\nfunction buildGenerator(\n  generator: ContextGenerator,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): SelfDescribingJson | Array<SelfDescribingJson> | undefined {\n  let contextGeneratorResult: SelfDescribingJson | Array<SelfDescribingJson> | undefined = undefined;\n  try {\n    // try to evaluate context generator\n    const args = {\n      event: event.getPayload(),\n      eventType: eventType,\n      eventSchema: eventSchema,\n    };\n    contextGeneratorResult = generator(args);\n    // determine if the produced result is a valid SDJ\n    if (Array.isArray(contextGeneratorResult) && contextGeneratorResult.every(isSelfDescribingJson)) {\n      return contextGeneratorResult;\n    } else if (isSelfDescribingJson(contextGeneratorResult)) {\n      return contextGeneratorResult;\n    } else {\n      return undefined;\n    }\n  } catch (error) {\n    contextGeneratorResult = undefined;\n  }\n  return contextGeneratorResult;\n}\n\nfunction normalizeToArray<T>(input: Array<T> | T): Array<T> {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return Array.of(input);\n}\n\nfunction generatePrimitives(\n  contextPrimitives: Array<ContextPrimitive> | ContextPrimitive,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInputs: Array<ContextPrimitive> = normalizeToArray(contextPrimitives);\n  const partialEvaluate = (primitive: ContextPrimitive) => {\n    const result = evaluatePrimitive(primitive, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = normalizedInputs.map(partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(\n    ...(generatedContexts.filter((c) => c != null && c.filter(Boolean)) as Array<Array<SelfDescribingJson>>)\n  );\n}\n\nfunction evaluatePrimitive(\n  contextPrimitive: ContextPrimitive,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> | undefined {\n  if (isSelfDescribingJson(contextPrimitive)) {\n    return [contextPrimitive as SelfDescribingJson];\n  } else if (isContextCallbackFunction(contextPrimitive)) {\n    const generatorOutput = buildGenerator(contextPrimitive as ContextGenerator, event, eventType, eventSchema);\n    if (isSelfDescribingJson(generatorOutput)) {\n      return [generatorOutput as SelfDescribingJson];\n    } else if (Array.isArray(generatorOutput)) {\n      return generatorOutput;\n    }\n  }\n  return undefined;\n}\n\nfunction evaluateProvider(\n  provider: ConditionalContextProvider,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  if (isFilterProvider(provider)) {\n    const filter: ContextFilter = (provider as FilterProvider)[0];\n    let filterResult = false;\n    try {\n      const args = {\n        event: event.getPayload(),\n        eventType: eventType,\n        eventSchema: eventSchema,\n      };\n      filterResult = filter(args);\n    } catch (error) {\n      filterResult = false;\n    }\n    if (filterResult === true) {\n      return generatePrimitives((provider as FilterProvider)[1], event, eventType, eventSchema);\n    }\n  } else if (isRuleSetProvider(provider)) {\n    if (matchSchemaAgainstRuleSet((provider as RuleSetProvider)[0], eventSchema)) {\n      return generatePrimitives((provider as RuleSetProvider)[1], event, eventType, eventSchema);\n    }\n  }\n  return [];\n}\n\nfunction generateConditionals(\n  providers: Array<ConditionalContextProvider> | ConditionalContextProvider,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInput: Array<ConditionalContextProvider> = normalizeToArray(providers);\n  const partialEvaluate = (provider: ConditionalContextProvider) => {\n    const result = evaluateProvider(provider, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = normalizedInput.map(partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(\n    ...(generatedContexts.filter((c) => c != null && c.filter(Boolean)) as Array<Array<SelfDescribingJson>>)\n  );\n}\n","/*\n * Copyright (c) 2022 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { v4 as uuid } from 'uuid';\nimport { payloadBuilder, PayloadBuilder, Payload, isJson, payloadJsonProcessor } from './payload';\nimport {\n  globalContexts,\n  ConditionalContextProvider,\n  ContextPrimitive,\n  GlobalContexts,\n  PluginContexts,\n  pluginContexts,\n} from './contexts';\nimport { CorePlugin } from './plugins';\nimport { LOG } from './logger';\n\n/**\n * Export interface for any Self-Describing JSON such as context or Self Describing events\n * @typeParam T - The type of the data object within a SelfDescribingJson\n */\nexport type SelfDescribingJson<T extends Record<keyof T, unknown> = Record<string, unknown>> = {\n  /**\n   * The schema string\n   * @example 'iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0'\n   */\n  schema: string;\n  /**\n   * The data object which should conform to the supplied schema\n   */\n  data: T;\n};\n\n/**\n * Export interface for any Self-Describing JSON which has the data attribute as an array\n * @typeParam T - The type of the data object within the SelfDescribingJson data array\n */\nexport type SelfDescribingJsonArray<T extends Record<keyof T, unknown> = Record<string, unknown>> = {\n  /**\n   * The schema string\n   * @example 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1'\n   */\n  schema: string;\n  /**\n   * The data array which should conform to the supplied schema\n   */\n  data: Array<T>;\n};\n\n/**\n * Algebraic datatype representing possible timestamp type choice\n */\nexport type Timestamp = TrueTimestamp | DeviceTimestamp | number;\n\n/**\n * A representation of a True Timestamp (ttm)\n */\nexport interface TrueTimestamp {\n  readonly type: 'ttm';\n  readonly value: number;\n}\n\n/**\n * A representation of a Device Timestamp (dtm)\n */\nexport interface DeviceTimestamp {\n  readonly type: 'dtm';\n  readonly value: number;\n}\n\n/**\n * Pair of timestamp type ready to be included to payload\n */\ntype TimestampPayload = TrueTimestamp | DeviceTimestamp;\n\n/**\n * Transform optional/old-behavior number timestamp into`Timestamp` ADT\n *\n * @param timestamp - optional number or timestamp object\n * @returns correct timestamp object\n */\nfunction getTimestamp(timestamp?: Timestamp | null): TimestampPayload {\n  if (timestamp == null) {\n    return { type: 'dtm', value: new Date().getTime() };\n  } else if (typeof timestamp === 'number') {\n    return { type: 'dtm', value: timestamp };\n  } else if (timestamp.type === 'ttm') {\n    // We can return timestamp here, but this is safer fallback\n    return { type: 'ttm', value: timestamp.value };\n  } else {\n    return { type: 'dtm', value: timestamp.value || new Date().getTime() };\n  }\n}\n\n/** Additional data points to set when tracking an event */\nexport interface CommonEventProperties<T = Record<string, unknown>> {\n  /** Add context to an event by setting an Array of Self Describing JSON */\n  context?: Array<SelfDescribingJson<T>> | null;\n  /** Set the true timestamp or overwrite the device sent timestamp on an event */\n  timestamp?: Timestamp | null;\n}\n\n/**\n * Export interface containing all Core functions\n */\nexport interface TrackerCore {\n  /**\n   * Call with a payload from a buildX function\n   * Adds context and payloadPairs name-value pairs to the payload\n   * Applies the callback to the built payload\n   *\n   * @param pb - Payload\n   * @param context - Custom contexts relating to the event\n   * @param timestamp - Timestamp of the event\n   * @returns Payload after the callback is applied\n   */\n  track: (\n    /** A PayloadBuilder created by one of the `buildX` functions */\n    pb: PayloadBuilder,\n    /** The additional contextual information related to the event */\n    context?: Array<SelfDescribingJson> | null,\n    /** Timestamp override */\n    timestamp?: Timestamp | null\n  ) => Payload;\n\n  /**\n   * Set a persistent key-value pair to be added to every payload\n   *\n   * @param key - Field name\n   * @param value - Field value\n   */\n  addPayloadPair: (key: string, value: unknown) => void;\n\n  /**\n   * Get current base64 encoding state\n   */\n  getBase64Encoding(): boolean;\n\n  /**\n   * Turn base 64 encoding on or off\n   *\n   * @param encode - Whether to encode payload\n   */\n  setBase64Encoding(encode: boolean): void;\n\n  /**\n   * Merges a dictionary into payloadPairs\n   *\n   * @param dict - Adds a new payload dictionary to the existing one\n   */\n  addPayloadDict(dict: Payload): void;\n\n  /**\n   * Replace payloadPairs with a new dictionary\n   *\n   * @param dict - Resets all current payload pairs with a new dictionary of pairs\n   */\n  resetPayloadPairs(dict: Payload): void;\n\n  /**\n   * Set the tracker version\n   *\n   * @param version - The version of the current tracker\n   */\n  setTrackerVersion(version: string): void;\n\n  /**\n   * Set the tracker namespace\n   *\n   * @param name - The trackers namespace\n   */\n  setTrackerNamespace(name: string): void;\n\n  /**\n   * Set the application ID\n   *\n   * @param appId - An application ID which identifies the current application\n   */\n  setAppId(appId: string): void;\n\n  /**\n   * Set the platform\n   *\n   * @param value - A valid Snowplow platform value\n   */\n  setPlatform(value: string): void;\n\n  /**\n   * Set the user ID\n   *\n   * @param userId - The custom user id\n   */\n  setUserId(userId: string): void;\n\n  /**\n   * Set the screen resolution\n   *\n   * @param width - screen resolution width\n   * @param height - screen resolution height\n   */\n  setScreenResolution(width: string, height: string): void;\n\n  /**\n   * Set the viewport dimensions\n   *\n   * @param width - viewport width\n   * @param height - viewport height\n   */\n  setViewport(width: string, height: string): void;\n\n  /**\n   * Set the color depth\n   *\n   * @param depth - A color depth value as string\n   */\n  setColorDepth(depth: string): void;\n\n  /**\n   * Set the timezone\n   *\n   * @param timezone - A timezone string\n   */\n  setTimezone(timezone: string): void;\n\n  /**\n   * Set the language\n   *\n   * @param lang - A language string e.g. 'en-UK'\n   */\n  setLang(lang: string): void;\n\n  /**\n   * Set the IP address\n   *\n   * @param ip - An IP Address string\n   */\n  setIpAddress(ip: string): void;\n\n  /**\n   * Set the Useragent\n   *\n   * @param useragent - A useragent string\n   */\n  setUseragent(useragent: string): void;\n\n  /**\n   * Adds contexts globally, contexts added here will be attached to all applicable events\n   * @param contexts - An array containing either contexts or a conditional contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts - An array containing either contexts or a conditional contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Add a plugin into the plugin collection after Core has already been initialised\n   * @param configuration - The plugin to add\n   */\n  addPlugin(configuration: CorePluginConfiguration): void;\n}\n\n/**\n * The configuration object for the tracker core library\n */\nexport interface CoreConfiguration {\n  /* Should payloads be base64 encoded when built */\n  base64?: boolean;\n  /* A list of all the plugins to include at load */\n  corePlugins?: Array<CorePlugin>;\n  /* The callback which will fire each time `track()` is called */\n  callback?: (PayloadData: PayloadBuilder) => void;\n}\n\n/**\n * The configuration of the plugin to add\n */\nexport interface CorePluginConfiguration {\n  /* The plugin to add */\n  plugin: CorePlugin;\n}\n\n/**\n * Create a tracker core object\n *\n * @param base64 - Whether to base 64 encode contexts and self describing event JSONs\n * @param corePlugins - The core plugins to be processed with each event\n * @param callback - Function applied to every payload dictionary object\n * @returns Tracker core\n */\nexport function trackerCore(configuration: CoreConfiguration = {}): TrackerCore {\n  function newCore(base64: boolean, corePlugins: Array<CorePlugin>, callback?: (PayloadData: PayloadBuilder) => void) {\n    const pluginContextsHelper: PluginContexts = pluginContexts(corePlugins),\n      globalContextsHelper: GlobalContexts = globalContexts();\n\n    let encodeBase64 = base64,\n      payloadPairs: Payload = {}; // Dictionary of key-value pairs which get added to every payload, e.g. tracker version\n\n    /**\n     * Wraps an array of custom contexts in a self-describing JSON\n     *\n     * @param contexts - Array of custom context self-describing JSONs\n     * @returns Outer JSON\n     */\n    function completeContexts(\n      contexts?: Array<SelfDescribingJson>\n    ): SelfDescribingJsonArray<SelfDescribingJson> | undefined {\n      if (contexts && contexts.length) {\n        return {\n          schema: 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0',\n          data: contexts,\n        };\n      }\n      return undefined;\n    }\n\n    /**\n     * Adds all global contexts to a contexts array\n     *\n     * @param pb - PayloadData\n     * @param contexts - Custom contexts relating to the event\n     */\n    function attachGlobalContexts(\n      pb: PayloadBuilder,\n      contexts?: Array<SelfDescribingJson> | null\n    ): Array<SelfDescribingJson> {\n      const applicableContexts: Array<SelfDescribingJson> = globalContextsHelper.getApplicableContexts(pb);\n      const returnedContexts: Array<SelfDescribingJson> = [];\n      if (contexts && contexts.length) {\n        returnedContexts.push(...contexts);\n      }\n      if (applicableContexts && applicableContexts.length) {\n        returnedContexts.push(...applicableContexts);\n      }\n      return returnedContexts;\n    }\n\n    /**\n     * Gets called by every trackXXX method\n     * Adds context and payloadPairs name-value pairs to the payload\n     * Applies the callback to the built payload\n     *\n     * @param pb - Payload\n     * @param context - Custom contexts relating to the event\n     * @param timestamp - Timestamp of the event\n     * @returns Payload after the callback is applied\n     */\n    function track(\n      pb: PayloadBuilder,\n      context?: Array<SelfDescribingJson> | null,\n      timestamp?: Timestamp | null\n    ): Payload {\n      pb.withJsonProcessor(payloadJsonProcessor(encodeBase64));\n      pb.add('eid', uuid());\n      pb.addDict(payloadPairs);\n      const tstamp = getTimestamp(timestamp);\n      pb.add(tstamp.type, tstamp.value.toString());\n      const allContexts = attachGlobalContexts(pb, pluginContextsHelper.addPluginContexts(context));\n      const wrappedContexts = completeContexts(allContexts);\n      if (wrappedContexts !== undefined) {\n        pb.addJson('cx', 'co', wrappedContexts);\n      }\n\n      corePlugins.forEach((plugin) => {\n        try {\n          if (plugin.beforeTrack) {\n            plugin.beforeTrack(pb);\n          }\n        } catch (ex) {\n          LOG.error('Plugin beforeTrack', ex);\n        }\n      });\n\n      if (typeof callback === 'function') {\n        callback(pb);\n      }\n\n      const finalPayload = pb.build();\n\n      corePlugins.forEach((plugin) => {\n        try {\n          if (plugin.afterTrack) {\n            plugin.afterTrack(finalPayload);\n          }\n        } catch (ex) {\n          LOG.error('Plugin afterTrack', ex);\n        }\n      });\n\n      return finalPayload;\n    }\n\n    /**\n     * Set a persistent key-value pair to be added to every payload\n     *\n     * @param key - Field name\n     * @param value - Field value\n     */\n    function addPayloadPair(key: string, value: unknown): void {\n      payloadPairs[key] = value;\n    }\n\n    const core = {\n      track,\n\n      addPayloadPair,\n\n      getBase64Encoding() {\n        return encodeBase64;\n      },\n\n      setBase64Encoding(encode: boolean) {\n        encodeBase64 = encode;\n      },\n\n      addPayloadDict(dict: Payload) {\n        for (const key in dict) {\n          if (Object.prototype.hasOwnProperty.call(dict, key)) {\n            payloadPairs[key] = dict[key];\n          }\n        }\n      },\n\n      resetPayloadPairs(dict: Payload) {\n        payloadPairs = isJson(dict) ? dict : {};\n      },\n\n      setTrackerVersion(version: string) {\n        addPayloadPair('tv', version);\n      },\n\n      setTrackerNamespace(name: string) {\n        addPayloadPair('tna', name);\n      },\n\n      setAppId(appId: string) {\n        addPayloadPair('aid', appId);\n      },\n\n      setPlatform(value: string) {\n        addPayloadPair('p', value);\n      },\n\n      setUserId(userId: string) {\n        addPayloadPair('uid', userId);\n      },\n\n      setScreenResolution(width: string, height: string) {\n        addPayloadPair('res', width + 'x' + height);\n      },\n\n      setViewport(width: string, height: string) {\n        addPayloadPair('vp', width + 'x' + height);\n      },\n\n      setColorDepth(depth: string) {\n        addPayloadPair('cd', depth);\n      },\n\n      setTimezone(timezone: string) {\n        addPayloadPair('tz', timezone);\n      },\n\n      setLang(lang: string) {\n        addPayloadPair('lang', lang);\n      },\n\n      setIpAddress(ip: string) {\n        addPayloadPair('ip', ip);\n      },\n\n      setUseragent(useragent: string) {\n        addPayloadPair('ua', useragent);\n      },\n\n      addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>) {\n        globalContextsHelper.addGlobalContexts(contexts);\n      },\n\n      clearGlobalContexts(): void {\n        globalContextsHelper.clearGlobalContexts();\n      },\n\n      removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>) {\n        globalContextsHelper.removeGlobalContexts(contexts);\n      },\n    };\n\n    return core;\n  }\n\n  const { base64, corePlugins, callback } = configuration,\n    plugins = corePlugins ?? [],\n    partialCore = newCore(base64 ?? true, plugins, callback),\n    core = {\n      ...partialCore,\n      addPlugin: (configuration: CorePluginConfiguration) => {\n        const { plugin } = configuration;\n        plugins.push(plugin);\n        plugin.logger?.(LOG);\n        plugin.activateCorePlugin?.(core);\n      },\n    };\n\n  plugins?.forEach((plugin) => {\n    plugin.logger?.(LOG);\n    plugin.activateCorePlugin?.(core);\n  });\n\n  return core;\n}\n\n/**\n * A Self Describing Event\n * A custom event type, allowing for an event to be tracked using your own custom schema\n * and a data object which conforms to the supplied schema\n */\nexport interface SelfDescribingEvent {\n  /** The Self Describing JSON which describes the event */\n  event: SelfDescribingJson;\n}\n\n/**\n * Build a self-describing event\n * A custom event type, allowing for an event to be tracked using your own custom schema\n * and a data object which conforms to the supplied schema\n *\n * @param event - Contains the properties and schema location for the event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSelfDescribingEvent(event: SelfDescribingEvent): PayloadBuilder {\n  const {\n      event: { schema, data },\n    } = event,\n    pb = payloadBuilder();\n  const ueJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0',\n    data: { schema, data },\n  };\n\n  pb.add('e', 'ue');\n  pb.addJson('ue_px', 'ue_pr', ueJson);\n\n  return pb;\n}\n\n/**\n * A Page View Event\n * Represents a Page View, which is typically fired as soon as possible when a web page\n * is loaded within the users browser. Often also fired on \"virtual page views\" within\n * Single Page Applications (SPA).\n */\nexport interface PageViewEvent {\n  /** The current URL visible in the users browser */\n  pageUrl?: string | null;\n  /** The current page title in the users browser */\n  pageTitle?: string | null;\n  /** The URL of the referring page */\n  referrer?: string | null;\n}\n\n/**\n * Build a Page View Event\n * Represents a Page View, which is typically fired as soon as possible when a web page\n * is loaded within the users browser. Often also fired on \"virtual page views\" within\n * Single Page Applications (SPA).\n *\n * @param event - Contains the properties for the Page View event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildPageView(event: PageViewEvent): PayloadBuilder {\n  const { pageUrl, pageTitle, referrer } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'pv'); // 'pv' for Page View\n  pb.add('url', pageUrl);\n  pb.add('page', pageTitle);\n  pb.add('refr', referrer);\n\n  return pb;\n}\n\n/**\n * A Page Ping Event\n * Fires when activity tracking is enabled in the browser.\n * Tracks same information as the last tracked Page View and includes scroll\n * information from the current page view\n */\nexport interface PagePingEvent extends PageViewEvent {\n  /** The minimum X scroll position for the current page view */\n  minXOffset?: number;\n  /** The maximum X scroll position for the current page view */\n  maxXOffset?: number;\n  /** The minimum Y scroll position for the current page view */\n  minYOffset?: number;\n  /** The maximum Y scroll position for the current page view */\n  maxYOffset?: number;\n}\n\n/**\n * Build a Page Ping Event\n * Fires when activity tracking is enabled in the browser.\n * Tracks same information as the last tracked Page View and includes scroll\n * information from the current page view\n *\n * @param event - Contains the properties for the Page Ping event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildPagePing(event: PagePingEvent): PayloadBuilder {\n  const { pageUrl, pageTitle, referrer, minXOffset, maxXOffset, minYOffset, maxYOffset } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'pp'); // 'pp' for Page Ping\n  pb.add('url', pageUrl);\n  pb.add('page', pageTitle);\n  pb.add('refr', referrer);\n  if (minXOffset && !isNaN(Number(minXOffset))) pb.add('pp_mix', minXOffset.toString());\n  if (maxXOffset && !isNaN(Number(maxXOffset))) pb.add('pp_max', maxXOffset.toString());\n  if (minYOffset && !isNaN(Number(minYOffset))) pb.add('pp_miy', minYOffset.toString());\n  if (maxYOffset && !isNaN(Number(maxYOffset))) pb.add('pp_may', maxYOffset.toString());\n\n  return pb;\n}\n\n/**\n * A Structured Event\n * A classic style of event tracking, allows for easier movement between analytics\n * systems. A loosely typed event, creating a Self Describing event is preferred, but\n * useful for interoperability.\n */\nexport interface StructuredEvent {\n  category: string;\n  action: string;\n  label?: string;\n  property?: string;\n  value?: number;\n}\n\n/**\n * Build a Structured Event\n * A classic style of event tracking, allows for easier movement between analytics\n * systems. A loosely typed event, creating a Self Describing event is preferred, but\n * useful for interoperability.\n *\n * @param event - Contains the properties for the Structured event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildStructEvent(event: StructuredEvent): PayloadBuilder {\n  const { category, action, label, property, value } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'se'); // 'se' for Structured Event\n  pb.add('se_ca', category);\n  pb.add('se_ac', action);\n  pb.add('se_la', label);\n  pb.add('se_pr', property);\n  pb.add('se_va', value == null ? undefined : value.toString());\n\n  return pb;\n}\n\n/**\n * An Ecommerce Transaction Event\n * Allows for tracking common ecommerce events, this event is usually used when\n * a customer completes a transaction.\n */\nexport interface EcommerceTransactionEvent {\n  /** An identifier for the order */\n  orderId: string;\n  /** The total value of the order  */\n  total: number;\n  /** Transaction affiliation (e.g. store where sale took place) */\n  affiliation?: string;\n  /** The amount of tax on the transaction */\n  tax?: number;\n  /** The amount of shipping costs for this transaction */\n  shipping?: number;\n  /** Delivery address, city */\n  city?: string;\n  /** Delivery address, state */\n  state?: string;\n  /** Delivery address, country */\n  country?: string;\n  /** Currency of the transaction */\n  currency?: string;\n}\n\n/**\n * Build an Ecommerce Transaction Event\n * Allows for tracking common ecommerce events, this event is usually used when\n * a consumer completes a transaction.\n *\n * @param event - Contains the properties for the Ecommerce Transactoion event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildEcommerceTransaction(event: EcommerceTransactionEvent): PayloadBuilder {\n  const { orderId, total, affiliation, tax, shipping, city, state, country, currency } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'tr'); // 'tr' for Transaction\n  pb.add('tr_id', orderId);\n  pb.add('tr_af', affiliation);\n  pb.add('tr_tt', total);\n  pb.add('tr_tx', tax);\n  pb.add('tr_sh', shipping);\n  pb.add('tr_ci', city);\n  pb.add('tr_st', state);\n  pb.add('tr_co', country);\n  pb.add('tr_cu', currency);\n\n  return pb;\n}\n\n/**\n * An Ecommerce Transaction Item\n * Related to the {@link EcommerceTransactionEvent}\n * Each Ecommerce Transaction may contain one or more EcommerceTransactionItem events\n */\nexport interface EcommerceTransactionItemEvent {\n  /** An identifier for the order */\n  orderId: string;\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The price of the product */\n  price: number;\n  /** The name of the product */\n  name?: string;\n  /** The category the product belongs to */\n  category?: string;\n  /** The quanity of this product within the transaction */\n  quantity?: number;\n  /** The currency of the product for the transaction */\n  currency?: string;\n}\n\n/**\n * Build an Ecommerce Transaction Item Event\n * Related to the {@link buildEcommerceTransaction}\n * Each Ecommerce Transaction may contain one or more EcommerceTransactionItem events\n *\n * @param event - Contains the properties for the Ecommerce Transaction Item event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildEcommerceTransactionItem(event: EcommerceTransactionItemEvent): PayloadBuilder {\n  const { orderId, sku, price, name, category, quantity, currency } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'ti'); // 'tr' for Transaction Item\n  pb.add('ti_id', orderId);\n  pb.add('ti_sk', sku);\n  pb.add('ti_nm', name);\n  pb.add('ti_ca', category);\n  pb.add('ti_pr', price);\n  pb.add('ti_qu', quantity);\n  pb.add('ti_cu', currency);\n\n  return pb;\n}\n\n/**\n * A Screen View Event\n * Similar to a Page View but less focused on typical web properties\n * Often used for mobile applications as the user is presented with\n * new views as they performance navigation events\n */\nexport interface ScreenViewEvent {\n  /** The name of the screen */\n  name?: string;\n  /** The identifier of the screen */\n  id?: string;\n}\n\n/**\n * Build a Scren View Event\n * Similar to a Page View but less focused on typical web properties\n * Often used for mobile applications as the user is presented with\n * new views as they performance navigation events\n *\n * @param event - Contains the properties for the Screen View event. One or more properties must be included.\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildScreenView(event: ScreenViewEvent): PayloadBuilder {\n  const { name, id } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/screen_view/jsonschema/1-0-0',\n      data: removeEmptyProperties({ name, id }),\n    },\n  });\n}\n\n/**\n * A Link Click Event\n * Used when a user clicks on a link on a webpage, typically an anchor tag `<a>`\n */\nexport interface LinkClickEvent {\n  /** The target URL of the link */\n  targetUrl: string;\n  /** The ID of the element clicked if present */\n  elementId?: string;\n  /** An array of class names from the element clicked */\n  elementClasses?: Array<string>;\n  /** The target value of the element if present */\n  elementTarget?: string;\n  /** The content of the element if present and enabled */\n  elementContent?: string;\n}\n\n/**\n * Build a Link Click Event\n * Used when a user clicks on a link on a webpage, typically an anchor tag `<a>`\n *\n * @param event - Contains the properties for the Link Click event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildLinkClick(event: LinkClickEvent): PayloadBuilder {\n  const { targetUrl, elementId, elementClasses, elementTarget, elementContent } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/link_click/jsonschema/1-0-1',\n    data: removeEmptyProperties({ targetUrl, elementId, elementClasses, elementTarget, elementContent }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Impression Event\n * Used to track an advertisement impression\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdImpressionEvent {\n  /** Identifier for the particular impression instance */\n  impressionId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /** The destination URL of the advertisement */\n  targetUrl?: string;\n  /** Identifier for the ad banner being displayed */\n  bannerId?: string;\n  /** Identifier for the zone where the ad banner is located */\n  zoneId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Impression Event\n * Used to track an advertisement impression\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Impression event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdImpression(event: AdImpressionEvent): PayloadBuilder {\n  const { impressionId, costModel, cost, targetUrl, bannerId, zoneId, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_impression/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      impressionId,\n      costModel,\n      cost,\n      targetUrl,\n      bannerId,\n      zoneId,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Click Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdClickEvent {\n  /** The destination URL of the advertisement */\n  targetUrl: string;\n  /**\tIdentifier for the particular click instance */\n  clickId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /** Identifier for the ad banner being displayed */\n  bannerId?: string;\n  /** Identifier for the zone where the ad banner is located */\n  zoneId?: string;\n  /** Identifier for the particular impression instance */\n  impressionId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Click Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Click event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdClick(event: AdClickEvent): PayloadBuilder {\n  const { targetUrl, clickId, costModel, cost, bannerId, zoneId, impressionId, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_click/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      targetUrl,\n      clickId,\n      costModel,\n      cost,\n      bannerId,\n      zoneId,\n      impressionId,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Conversion Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdConversionEvent {\n  /** Identifier for the particular conversion instance */\n  conversionId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /**\tConversion category */\n  category?: string;\n  /** The type of user interaction e.g. 'purchase' */\n  action?: string;\n  /** Describes the object of the conversion */\n  property?: string;\n  /** How much the conversion is initially worth */\n  initialValue?: number;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Conversion Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Conversion event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdConversion(event: AdConversionEvent): PayloadBuilder {\n  const { conversionId, costModel, cost, category, action, property, initialValue, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_conversion/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      conversionId,\n      costModel,\n      cost,\n      category,\n      action,\n      property,\n      initialValue,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * A Social Interaction Event\n * Social tracking will be used to track the way users interact\n * with Facebook, Twitter and Google + widgets\n * e.g. to capture “like this” or “tweet this” events.\n */\nexport interface SocialInteractionEvent {\n  /** Social action performed */\n  action: string;\n  /** Social network */\n  network: string;\n  /** Object social action is performed on */\n  target?: string;\n}\n\n/**\n * Build a Social Interaction Event\n * Social tracking will be used to track the way users interact\n * with Facebook, Twitter and Google + widgets\n * e.g. to capture “like this” or “tweet this” events.\n *\n * @param event - Contains the properties for the Social Interaction event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSocialInteraction(event: SocialInteractionEvent): PayloadBuilder {\n  const { action, network, target } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/social_interaction/jsonschema/1-0-0',\n    data: removeEmptyProperties({ action, network, target }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Add To Cart Event\n * For tracking users adding items from a cart\n * on an ecommerce site.\n */\nexport interface AddToCartEvent {\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The number added to the cart */\n  quantity: number;\n  /** The name of the product */\n  name?: string;\n  /** The category of the product */\n  category?: string;\n  /** The price of the product */\n  unitPrice?: number;\n  /** The currency of the product */\n  currency?: string;\n}\n\n/**\n * Build a Add To Cart Event\n * For tracking users adding items from a cart\n * on an ecommerce site.\n *\n * @param event - Contains the properties for the Add To Cart event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAddToCart(event: AddToCartEvent): PayloadBuilder {\n  const { sku, quantity, name, category, unitPrice, currency } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/add_to_cart/jsonschema/1-0-0',\n      data: removeEmptyProperties({\n        sku,\n        quantity,\n        name,\n        category,\n        unitPrice,\n        currency,\n      }),\n    },\n  });\n}\n\n/**\n * An Remove To Cart Event\n * For tracking users removing items from a cart\n * on an ecommerce site.\n */\nexport interface RemoveFromCartEvent {\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The number removed from the cart */\n  quantity: number;\n  /** The name of the product */\n  name?: string;\n  /** The category of the product */\n  category?: string;\n  /** The price of the product */\n  unitPrice?: number;\n  /** The currency of the product */\n  currency?: string;\n}\n\n/**\n * Build a Remove From Cart Event\n * For tracking users removing items from a cart\n * on an ecommerce site.\n *\n * @param event - Contains the properties for the Remove From Cart event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildRemoveFromCart(event: RemoveFromCartEvent): PayloadBuilder {\n  const { sku, quantity, name, category, unitPrice, currency } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/remove_from_cart/jsonschema/1-0-0',\n      data: removeEmptyProperties({\n        sku,\n        quantity,\n        name,\n        category,\n        unitPrice,\n        currency,\n      }),\n    },\n  });\n}\n\n/**\n * Represents either a Form Focus or Form Change event\n * When a user focuses on a form element or when a user makes a\n * change to a form element.\n */\nexport interface FormFocusOrChangeEvent {\n  /** The schema which will be used for the event */\n  schema: 'change_form' | 'focus_form';\n  /** The ID of the form which the element belongs to */\n  formId: string;\n  /** The element ID which the user is interacting with */\n  elementId: string;\n  /** The name of the node (\"INPUT\", \"TEXTAREA\", \"SELECT\") */\n  nodeName: string;\n  /** The value of the element at the time of the event firing */\n  value: string | null;\n  /** The type of element (e.g. \"datetime\", \"text\", \"radio\", etc.) */\n  type?: string | null;\n  /** The class names on the element */\n  elementClasses?: Array<string> | null;\n}\n\n/**\n * Build a Form Focus or Change Form Event based on schema property\n * When a user focuses on a form element or when a user makes a\n * change to a form element.\n *\n * @param event - Contains the properties for the Form Focus or Change Form event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildFormFocusOrChange(event: FormFocusOrChangeEvent): PayloadBuilder {\n  let event_schema = '';\n  const { schema, formId, elementId, nodeName, elementClasses, value, type } = event;\n  const event_data: Record<string, unknown> = { formId, elementId, nodeName, elementClasses, value };\n  if (schema === 'change_form') {\n    event_schema = 'iglu:com.snowplowanalytics.snowplow/change_form/jsonschema/1-0-0';\n    event_data.type = type;\n  } else if (schema === 'focus_form') {\n    event_schema = 'iglu:com.snowplowanalytics.snowplow/focus_form/jsonschema/1-0-0';\n    event_data.elementType = type;\n  }\n  return buildSelfDescribingEvent({\n    event: {\n      schema: event_schema,\n      data: removeEmptyProperties(event_data, { value: true }),\n    },\n  });\n}\n\n/**\n * A representation of an element within a form\n */\nexport type FormElement = {\n  /** The name of the element */\n  name: string;\n  /** The current value of the element */\n  value: string | null;\n  /** The name of the node (\"INPUT\", \"TEXTAREA\", \"SELECT\") */\n  nodeName: string;\n  /** The type of element (e.g. \"datetime\", \"text\", \"radio\", etc.) */\n  type?: string | null;\n};\n\n/**\n * A Form Submission Event\n * Used to track when a user submits a form\n */\nexport interface FormSubmissionEvent {\n  /** The ID of the form */\n  formId: string;\n  /** The class names on the form */\n  formClasses?: Array<string>;\n  /** The elements contained within the form */\n  elements?: Array<FormElement>;\n}\n\n/**\n * Build a Form Submission Event\n * Used to track when a user submits a form\n *\n * @param event - Contains the properties for the Form Submission event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildFormSubmission(event: FormSubmissionEvent): PayloadBuilder {\n  const { formId, formClasses, elements } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/submit_form/jsonschema/1-0-0',\n      data: removeEmptyProperties({ formId, formClasses, elements }),\n    },\n  });\n}\n\n/**\n * A Site Search Event\n * Used when a user performs a search action on a page\n */\nexport interface SiteSearchEvent {\n  /** The terms of the search */\n  terms: Array<string>;\n  /** Any filters which have been applied to the search */\n  filters?: Record<string, string | boolean>;\n  /** The total number of results for this search */\n  totalResults?: number;\n  /** The number of visible results on the page */\n  pageResults?: number;\n}\n\n/**\n * Build a Site Search Event\n * Used when a user performs a search action on a page\n *\n * @param event - Contains the properties for the Site Search event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSiteSearch(event: SiteSearchEvent): PayloadBuilder {\n  const { terms, filters, totalResults, pageResults } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/site_search/jsonschema/1-0-0',\n      data: removeEmptyProperties({ terms, filters, totalResults, pageResults }),\n    },\n  });\n}\n\n/**\n * A Consent Withdrawn Event\n * Used for tracking when a user withdraws their consent\n */\nexport interface ConsentWithdrawnEvent {\n  /** Specifies whether all consent should be withdrawn */\n  all: boolean;\n  /** Identifier for the document withdrawing consent */\n  id?: string;\n  /** Version of the document withdrawing consent */\n  version?: string;\n  /** Name of the document withdrawing consent */\n  name?: string;\n  /** Description of the document withdrawing consent */\n  description?: string;\n}\n\n/**\n * Build a Consent Withdrawn Event\n * Used for tracking when a user withdraws their consent\n *\n * @param event - Contains the properties for the Consent Withdrawn event\n * @returns An object containing the PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track} and a 'consent_document' context\n */\nexport function buildConsentWithdrawn(event: ConsentWithdrawnEvent) {\n  const { all, id, version, name, description } = event;\n  const documentJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n    data: removeEmptyProperties({ id, version, name, description }),\n  };\n\n  return {\n    event: buildSelfDescribingEvent({\n      event: {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_withdrawn/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          all: all,\n        }),\n      },\n    }),\n    context: [documentJson],\n  };\n}\n\n/**\n * A Consent Granted Event\n * Used for tracking when a user grants their consent\n */\nexport interface ConsentGrantedEvent {\n  /** Identifier for the document granting consent */\n  id: string;\n  /** Version of the document granting consent */\n  version: string;\n  /** Name of the document granting consent */\n  name?: string;\n  /** Description of the document granting consent */\n  description?: string;\n  /** When the consent expires */\n  expiry?: string;\n}\n\n/**\n * Build a Consent Granted Event\n * Used for tracking when a user grants their consent\n *\n * @param event - Contains the properties for the Consent Granted event\n * @returns An object containing the PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track} and a 'consent_document' context\n */\nexport function buildConsentGranted(event: ConsentGrantedEvent) {\n  const { expiry, id, version, name, description } = event;\n  const documentJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n    data: removeEmptyProperties({ id, version, name, description }),\n  };\n\n  return {\n    event: buildSelfDescribingEvent({\n      event: {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_granted/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          expiry: expiry,\n        }),\n      },\n    }),\n    context: [documentJson],\n  };\n}\n\n/**\n * Returns a copy of a JSON with undefined and null properties removed\n *\n * @param event - JSON object to clean\n * @param exemptFields - Set of fields which should not be removed even if empty\n * @returns A cleaned copy of eventJson\n */\nexport function removeEmptyProperties(\n  event: Record<string, unknown>,\n  exemptFields: Record<string, boolean> = {}\n): Record<string, unknown> {\n  const ret: Record<string, unknown> = {};\n  for (const k in event) {\n    if (exemptFields[k] || (event[k] !== null && typeof event[k] !== 'undefined')) {\n      ret[k] = event[k];\n    }\n  }\n  return ret;\n}\n","/*\n * Copyright (c) 2022 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst label = 'Snowplow: ';\n\nexport enum LOG_LEVEL {\n  none = 0,\n  error = 1,\n  warn = 2,\n  debug = 3,\n  info = 4,\n}\n\nexport interface Logger {\n  setLogLevel: (level: LOG_LEVEL) => void;\n  info: (message: string, ...extraParams: unknown[]) => void;\n  debug: (message: string, ...extraParams: unknown[]) => void;\n  warn: (message: string, error?: unknown, ...extraParams: unknown[]) => void;\n  error: (message: string, error?: unknown, ...extraParams: unknown[]) => void;\n}\n\nexport const LOG = logger();\n\nfunction logger(logLevel: LOG_LEVEL = LOG_LEVEL.warn): Logger {\n  function setLogLevel(level: LOG_LEVEL) {\n    if (LOG_LEVEL[level]) {\n      logLevel = level;\n    } else {\n      logLevel = LOG_LEVEL.warn;\n    }\n  }\n\n  /**\n   * Log errors, with or without error object\n   */\n  function error(message: string, error?: unknown, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.error && typeof console !== 'undefined') {\n      const logMsg = label + message + '\\n';\n      if (error) {\n        console.error(logMsg + '\\n', error, ...extraParams);\n      } else {\n        console.error(logMsg, ...extraParams);\n      }\n    }\n  }\n\n  /**\n   * Log warnings, with or without error object\n   */\n  function warn(message: string, error?: unknown, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.warn && typeof console !== 'undefined') {\n      const logMsg = label + message;\n      if (error) {\n        console.warn(logMsg + '\\n', error, ...extraParams);\n      } else {\n        console.warn(logMsg, ...extraParams);\n      }\n    }\n  }\n\n  /**\n   * Log debug messages\n   */\n  function debug(message: string, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.debug && typeof console !== 'undefined') {\n      console.debug(label + message, ...extraParams);\n    }\n  }\n\n  /**\n   * Log info messages\n   */\n  function info(message: string, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.info && typeof console !== 'undefined') {\n      console.info(label + message, ...extraParams);\n    }\n  }\n\n  return { setLogLevel, warn, error, debug, info };\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n"],"names":["__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","payloadBuilder","processor","dict","allJson","jsonForProcessing","contextEntitiesForProcessing","add","key","value","addDict","Object","hasOwnProperty","addJson","keyIfEncoded","keyIfNotEncoded","json","isNonEmptyJson","jsonWithKeys","push","addContextEntity","entity","getPayload","getJson","b","withJsonProcessor","jsonProcessor","build","this","a","payloadJsonProcessor","encodeBase64","str","JSON","stringify","ac","tmp_arr","data","unescape","encodeURIComponent","o1","charCodeAt","o2","o3","bits","h1","E","h3","A","b64","charAt","h2","h4","enc","join","m","r","replace","combineContexts","originalContext","newContext","payload","cx","co","p","parse","base64decode","encodedData","dec","tmpArr","indexOf","g","n","String","fromCharCode","c","decodeURIComponent","split","map","toString","b64Data","undefined","context","_i","schema","O","property","isJson","P","constructor","globalPrimitives","conditionalProviders","getGlobalPrimitives","getConditionalProviders","addGlobalContexts","contexts","acceptedConditionalContexts","acceptedContextPrimitives","isConditionalContextProvider","isContextPrimitive","clearGlobalContexts","removeGlobalContexts","filter","item","getApplicableContexts","event","eventJson_1","d","eventType","e","generatedPrimitives","generatePrimitives","eventSchema","apply","generatedConditionals","generateConditionals","providers","normalizeToArray","partialEvaluate","provider","isFilterProvider","filterResult","k","error","isRuleSetProvider","matchSchemaAgainstRuleSet","result","_a","generatedContexts","Boolean","pluginContexts","ca","plugins","addPluginContexts","additionalContexts","combinedContexts","forEach","plugin","ex","LOG","getSchemaParts","da","input","matches","re","exec","validateVendorParts","parts","asterisk","validateVendor","getRuleParts","isValidRule","J","ruleParts","vendor","isStringArray","isArray","every","x","isValidRuleSetArg","isSelfDescribingJson","isRuleSet","ruleCount","accept","reject","isContextCallbackFunction","H","D","W","Q","V","ruleSet","rejectCount","acceptCount","acceptRules","some","rule","I","f","matchSchemaAgainstRule","rejectRules","schemaParts","matchVendor","vendorParts","matchPart","contextPrimitives","primitive","contextGeneratorResult","generatorOutput","buildSelfDescribingEvent","pb","ueJson","removeEmptyProperties","u","exemptFields","ret","LOG_LEVEL","__assign","assign","t","s","none","warn","debug","info","logger","logLevel","setLogLevel","level","message","extraParams","console","logMsg","label","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","rngBrowser.exports","ma","rnds","exports","Math","random","byteToHex","substr","bytesToUuid_1","_nodeId","_clockseq","bytesToUuid$2","buf","offset","rng","require$$0","_lastMSecs","_lastNSecs","v4","v4$1","options","ii","require$$1","v1","v1$1","node","clockseq","seedBytes","msecs","getTime","Date","nsecs","dt","Error","X","tl","tmh","buildAdClick","eventJson","targetUrl","clickId","costModel","cost","bannerId","zoneId","impressionId","advertiserId","campaignId","buildAdConversion","w","conversionId","category","action","initialValue","buildAdImpression","buildAddToCart","sku","quantity","name","unitPrice","currency","buildConsentGranted","expiry","documentJson","id","version","description","buildConsentWithdrawn","all","buildEcommerceTransaction","orderId","total","affiliation","tax","shipping","city","state","country","buildEcommerceTransactionItem","price","buildFormFocusOrChange","event_schema","type","event_data","formId","elementId","nodeName","elementClasses","elementType","buildFormSubmission","formClasses","elements","buildLinkClick","elementTarget","elementContent","buildPagePing","pageUrl","pageTitle","referrer","minXOffset","maxXOffset","minYOffset","maxYOffset","isNaN","Number","buildPageView","buildRemoveFromCart","buildScreenView","buildSiteSearch","terms","filters","totalResults","pageResults","buildSocialInteraction","network","target","buildStructEvent","resolveDynamicContext","dynamicOrStaticContexts","trackerCore","configuration","base64","corePlugins","callback","pluginContextsHelper","globalContextsHelper","payloadPairs","globalContexts","core","partialCore","track","timestamp","uuid","tstamp","getTimestamp","allContexts","attachGlobalContexts","applicableContexts","returnedContexts","v","wrappedContexts","beforeTrack","finalPayload","afterTrack","addPayloadPair","getBase64Encoding","setBase64Encoding","encode","addPayloadDict","resetPayloadPairs","setTrackerVersion","tv","setTrackerNamespace","tna","setAppId","appId","aid","setPlatform","setUserId","userId","uid","setScreenResolution","width","height","res","setViewport","vp","setColorDepth","depth","cd","setTimezone","timezone","tz","setLang","lang","setIpAddress","ip","setUseragent","useragent","ua","addPlugin","_b","activateCorePlugin"],"mappings":"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"}