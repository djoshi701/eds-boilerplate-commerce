"use strict";

exports.default = void 0;
var _index = require("../../utils/index.js");
var _createOnResponseHandler = require("./createOnResponseHandler.js");
var _createDecisionProvider = require("./createDecisionProvider.js");
var _createApplyResponse = require("./createApplyResponse.js");
var _createEventRegistry = require("./createEventRegistry.js");
var _createContextProvider = require("./createContextProvider.js");
var _createSubscribeRulesetItems = require("./createSubscribeRulesetItems.js");
var _constants = require("./constants.js");
var _createEvaluateRulesetsCommand = require("./createEvaluateRulesetsCommand.js");
var _utils = require("./utils.js");
var _index2 = require("../../utils/validation/index.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
var createDecisioningEngine = function createDecisioningEngine(_ref) {
  var config = _ref.config,
    createNamespacedStorage = _ref.createNamespacedStorage,
    consent = _ref.consent;
  var orgId = config.orgId,
    personalizationStorageEnabled = config.personalizationStorageEnabled;
  var storage = createNamespacedStorage((0, _index.sanitizeOrgIdForCookieName)(orgId) + ".decisioning.");
  if (!personalizationStorageEnabled) {
    (0, _utils.clearLocalStorage)(storage.persistent);
  }
  var eventRegistry = (0, _createEventRegistry.default)({
    storage: (0, _utils.createInMemoryStorage)()
  });
  var decisionProvider = (0, _createDecisionProvider.default)({
    eventRegistry: eventRegistry
  });
  var contextProvider = (0, _createContextProvider.default)({
    eventRegistry: eventRegistry,
    window: window
  });
  var evaluateRulesetsCommand = (0, _createEvaluateRulesetsCommand.default)({
    contextProvider: contextProvider,
    decisionProvider: decisionProvider
  });
  var subscribeRulesetItems = (0, _createSubscribeRulesetItems.default)();
  var applyResponse;
  return {
    lifecycle: {
      onDecision: function onDecision(_ref2) {
        var propositions = _ref2.propositions;
        subscribeRulesetItems.refresh(propositions);
      },
      onComponentsRegistered: function onComponentsRegistered(tools) {
        applyResponse = (0, _createApplyResponse.default)(tools.lifecycle);
        if (personalizationStorageEnabled) {
          consent.awaitConsent().then(function () {
            eventRegistry.setStorage(storage.persistent);
          }).catch(function () {
            if (storage) {
              (0, _utils.clearLocalStorage)(storage.persistent);
            }
          });
        }
      },
      onBeforeEvent: function onBeforeEvent(_ref3) {
        var event = _ref3.event,
          renderDecisions = _ref3.renderDecisions,
          _ref3$personalization = _ref3.personalization,
          personalization = _ref3$personalization === void 0 ? {} : _ref3$personalization,
          _ref3$onResponse = _ref3.onResponse,
          onResponse = _ref3$onResponse === void 0 ? _index.noop : _ref3$onResponse;
        var _personalization$deci = personalization.decisionContext,
          decisionContext = _personalization$deci === void 0 ? {} : _personalization$deci;
        onResponse((0, _createOnResponseHandler.default)({
          renderDecisions: renderDecisions,
          decisionProvider: decisionProvider,
          applyResponse: applyResponse,
          event: event,
          personalization: personalization,
          decisionContext: contextProvider.getContext(_objectSpread(_defineProperty(_defineProperty({}, _constants.CONTEXT_KEY.TYPE, _constants.CONTEXT_EVENT_TYPE.EDGE), _constants.CONTEXT_KEY.SOURCE, _constants.CONTEXT_EVENT_SOURCE.REQUEST), decisionContext))
        }));
        eventRegistry.addExperienceEdgeEvent(event);
      }
    },
    commands: {
      evaluateRulesets: {
        run: function run(_ref4) {
          var renderDecisions = _ref4.renderDecisions,
            _ref4$personalization = _ref4.personalization,
            personalization = _ref4$personalization === void 0 ? {} : _ref4$personalization;
          var _personalization$deci2 = personalization.decisionContext,
            decisionContext = _personalization$deci2 === void 0 ? {} : _personalization$deci2;
          return evaluateRulesetsCommand.run({
            renderDecisions: renderDecisions,
            decisionContext: _objectSpread(_defineProperty(_defineProperty({}, _constants.CONTEXT_KEY.TYPE, _constants.CONTEXT_EVENT_TYPE.RULES_ENGINE), _constants.CONTEXT_KEY.SOURCE, _constants.CONTEXT_EVENT_SOURCE.REQUEST), decisionContext),
            applyResponse: applyResponse
          });
        },
        optionsValidator: evaluateRulesetsCommand.optionsValidator
      },
      subscribeRulesetItems: subscribeRulesetItems.command
    }
  };
};
createDecisioningEngine.namespace = "DecisioningEngine";
createDecisioningEngine.configValidators = (0, _index2.objectOf)({
  personalizationStorageEnabled: (0, _index2.boolean)().default(false)
});
var _default = exports.default = createDecisioningEngine;